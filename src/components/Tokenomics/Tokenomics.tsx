
import React, { useEffect, useRef, useState } from 'react';
import './Tokenomics.css';

const Tokenomics: React.FC = () => {
  const sectionRef = useRef<HTMLDivElement>(null);
  const [activeTab, setActiveTab] = useState('distribution');

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate');
          }
        });
      },
      { threshold: 0.1 }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => observer.disconnect();
  }, []);

  const distributionData = [
    { label: '–ü—É–±–ª–∏—á–Ω–∞—è –ø—Ä–æ–¥–∞–∂–∞', percentage: 20, color: '#00ffff', amount: '200M ISLM' },
    { label: '–†–∞–∑–≤–∏—Ç–∏–µ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã', percentage: 25, color: '#ffd700', amount: '250M ISLM' },
    { label: '–ö–æ–º–∞–Ω–¥–∞ –∏ —Å–æ–≤–µ—Ç–Ω–∏–∫–∏', percentage: 15, color: '#8a2be2', amount: '150M ISLM' },
    { label: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞', percentage: 10, color: '#ff6b6b', amount: '100M ISLM' },
    { label: '–†–µ–∑–µ—Ä–≤ —Ñ–æ–Ω–¥–∞', percentage: 20, color: '#4ecdc4', amount: '200M ISLM' },
    { label: '–õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å', percentage: 10, color: '#45b7d1', amount: '100M ISLM' }
  ];

  const vestingData = [
    { label: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞', percentage: 10, period: 'TGE' },
    { label: '–õ–∏–Ω–µ–π–Ω–∞—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞', percentage: 60, period: '24 –º–µ—Å—è—Ü–∞' },
    { label: '–ü–æ—ç—Ç–∞–ø–Ω–∞—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞', percentage: 30, period: '36 –º–µ—Å—è—Ü–µ–≤' }
  ];

  const stakingData = [
    { validator: 'HAQQ Foundation', stake: '12.5%', apy: '15%', status: '–ê–∫—Ç–∏–≤–Ω—ã–π' },
    { validator: 'Islamic Finance Hub', stake: '8.3%', apy: '14%', status: '–ê–∫—Ç–∏–≤–Ω—ã–π' },
    { validator: 'Sharia Compliance', stake: '7.2%', apy: '13%', status: '–ê–∫—Ç–∏–≤–Ω—ã–π' },
    { validator: 'Global Islamic Bank', stake: '6.8%', apy: '12%', status: '–ê–∫—Ç–∏–≤–Ω—ã–π' },
    { validator: 'Halal Ventures', stake: '5.9%', apy: '11%', status: '–ê–∫—Ç–∏–≤–Ω—ã–π' }
  ];

  return (
    <section id="tokenomics" className="tokenomics-section" ref={sectionRef}>
      <div className="tokenomics-container">
        <div className="tokenomics-header">
          <h2 className="section-title gradient-text">–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞ ISLM</h2>
          <p className="section-subtitle">
            –£—Å—Ç–æ–π—á–∏–≤–∞—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
          </p>
        </div>

        <div className="tokenomics-stats">
          <div className="stat-card">
            <div className="stat-icon">üí∞</div>
            <div className="stat-content">
              <div className="stat-value">1,000,000,000</div>
              <div className="stat-label">–û–±—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ISLM</div>
            </div>
          </div>
          
          <div className="stat-card">
            <div className="stat-icon">üî•</div>
            <div className="stat-content">
              <div className="stat-value">2%</div>
              <div className="stat-label">–ì–æ–¥–æ–≤–∞—è –¥–µ—Ñ–ª—è—Ü–∏—è</div>
            </div>
          </div>
          
          <div className="stat-card">
            <div className="stat-icon">üèÜ</div>
            <div className="stat-content">
              <div className="stat-value">12-15%</div>
              <div className="stat-label">–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å—Ç–µ–π–∫–∏–Ω–≥–∞</div>
            </div>
          </div>
        </div>

        <div className="tokenomics-tabs">
          <div className="tab-buttons">
            <button 
              className={`tab-button ${activeTab === 'distribution' ? 'active' : ''}`}
              onClick={() => setActiveTab('distribution')}
            >
              –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
            </button>
            <button 
              className={`tab-button ${activeTab === 'vesting' ? 'active' : ''}`}
              onClick={() => setActiveTab('vesting')}
            >
              –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            </button>
            <button 
              className={`tab-button ${activeTab === 'staking' ? 'active' : ''}`}
              onClick={() => setActiveTab('staking')}
            >
              –°—Ç–µ–π–∫–∏–Ω–≥
            </button>
          </div>

          <div className="tab-content">
            {activeTab === 'distribution' && (
              <div className="distribution-tab">
                <div className="distribution-chart">
                  <div className="chart-container">
                    <div className="pie-chart">
                      {distributionData.map((item, index) => (
                        <div 
                          key={index}
                          className="pie-slice"
                          style={{
                            '--percentage': item.percentage,
                            '--color': item.color,
                            '--rotation': distributionData.slice(0, index).reduce((acc, curr) => acc + curr.percentage, 0) * 3.6
                          } as React.CSSProperties}
                        ></div>
                      ))}
                    </div>
                  </div>
                  
                  <div className="distribution-legend">
                    {distributionData.map((item, index) => (
                      <div key={index} className="legend-item">
                        <div 
                          className="legend-color" 
                          style={{ backgroundColor: item.color }}
                        ></div>
                        <div className="legend-content">
                          <div className="legend-label">{item.label}</div>
                          <div className="legend-value">{item.percentage}% ‚Ä¢ {item.amount}</div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'vesting' && (
              <div className="vesting-tab">
                <div className="vesting-timeline">
                  {vestingData.map((item, index) => (
                    <div key={index} className="timeline-item">
                      <div className="timeline-marker"></div>
                      <div className="timeline-content">
                        <h4>{item.label}</h4>
                        <p>{item.percentage}% —Ç–æ–∫–µ–Ω–æ–≤</p>
                        <span className="timeline-period">{item.period}</span>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {activeTab === 'staking' && (
              <div className="staking-tab">
                <div className="staking-table">
                  <div className="table-header">
                    <div className="header-cell">–í–∞–ª–∏–¥–∞—Ç–æ—Ä</div>
                    <div className="header-cell">–î–æ–ª—è —Å—Ç–µ–π–∫–∞</div>
                    <div className="header-cell">APY</div>
                    <div className="header-cell">–°—Ç–∞—Ç—É—Å</div>
                  </div>
                  
                  {stakingData.map((validator, index) => (
                    <div key={index} className="table-row">
                      <div className="table-cell">{validator.validator}</div>
                      <div className="table-cell">{validator.stake}</div>
                      <div className="table-cell">{validator.apy}</div>
                      <div className="table-cell">
                        <span className="status-badge active">{validator.status}</span>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>

        <div className="tokenomics-features">
          <div className="feature-item">
            <div className="feature-icon">üîÑ</div>
            <h4>–î–µ—Ñ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å</h4>
            <p>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∂–∏–≥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ü–µ–Ω–Ω–æ—Å—Ç–∏</p>
          </div>
          
          <div className="feature-item">
            <div className="feature-icon">üéØ</div>
            <h4>Utility Token</h4>
            <p>–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ</p>
          </div>
          
          <div className="feature-item">
            <div className="feature-icon">üèõÔ∏è</div>
            <h4>Governance</h4>
            <p>–£—á–∞—Å—Ç–∏–µ –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º —á–µ—Ä–µ–∑ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ</p>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Tokenomics;
