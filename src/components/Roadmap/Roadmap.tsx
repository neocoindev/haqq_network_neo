
import React, { useEffect, useRef } from 'react';
import './Roadmap.css';

const Roadmap: React.FC = () => {
  const sectionRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate');
            
            // Animate roadmap items with stagger
            const items = entry.target.querySelectorAll('.roadmap-item');
            items.forEach((item, index) => {
              setTimeout(() => {
                item.classList.add('animate');
              }, index * 300);
            });
          }
        });
      },
      { threshold: 0.1 }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => observer.disconnect();
  }, []);

  const roadmapData = [
    {
      quarter: 'Q1 2024',
      title: '–ó–∞–ø—É—Å–∫ Mainnet',
      status: 'completed',
      items: [
        '–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ç–∏ HAQQ',
        '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Cosmos Hub',
        '–ó–∞–ø—É—Å–∫ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞',
        '–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å Islamic Coin'
      ]
    },
    {
      quarter: 'Q2 2024',
      title: 'DeFi –ü—Ä–æ—Ç–æ–∫–æ–ª—ã',
      status: 'completed',
      items: [
        '–ó–∞–ø—É—Å–∫ DEX –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã',
        '–ü—Ä–æ—Ç–æ–∫–æ–ª –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—è',
        'Yield farming –ø—Ä–æ–≥—Ä–∞–º–º—ã',
        'Liquid staking —Ä–µ—à–µ–Ω–∏—è'
      ]
    },
    {
      quarter: 'Q3 2024',
      title: 'NFT –∏ Gaming',
      status: 'in-progress',
      items: [
        '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∏—Å–ª–∞–º—Å–∫–∏—Ö NFT',
        'Gaming —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞',
        '–ú–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–µ–∫—Ç—ã',
        '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã'
      ]
    },
    {
      quarter: 'Q4 2024',
      title: '–ì–ª–æ–±–∞–ª—å–Ω–∞—è —ç–∫—Å–ø–∞–Ω—Å–∏—è',
      status: 'planned',
      items: [
        '–ó–∞–ø—É—Å–∫ –≤ 50+ —Å—Ç—Ä–∞–Ω–∞—Ö',
        '–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞ —Å –±–∞–Ω–∫–∞–º–∏',
        '–†–µ–≥—É–ª—è—Ç–æ—Ä–Ω—ã–µ –ª–∏—Ü–µ–Ω–∑–∏–∏',
        '–ò–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã'
      ]
    },
    {
      quarter: 'Q1 2025',
      title: '–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ',
      status: 'planned',
      items: [
        'Layer 2 —Ä–µ—à–µ–Ω–∏—è',
        '–ú—É–ª—å—Ç–∏—á–µ–π–Ω-–º–æ—Å—Ç—ã',
        '–ò–ò-–æ—Äacles',
        '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —à–∞—Ä–∏–∞—Ç-–∞—É–¥–∏—Ç'
      ]
    },
    {
      quarter: 'Q2 2025',
      title: '–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ 2.0',
      status: 'planned',
      items: [
        '–ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–Ω–æ–º–∏—è DAO',
        '–ö–≤–∞–Ω—Ç–æ–≤–æ-—É—Å—Ç–æ–π—á–∏–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
        '–ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
        '10M+ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
      ]
    }
  ];

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'completed':
        return '‚úÖ';
      case 'in-progress':
        return 'üîÑ';
      case 'planned':
        return 'üìã';
      default:
        return '‚è≥';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'completed':
        return '#00ff88';
      case 'in-progress':
        return '#ffd700';
      case 'planned':
        return '#00ffff';
      default:
        return '#8a2be2';
    }
  };

  return (
    <section id="roadmap" className="roadmap-section" ref={sectionRef}>
      <div className="roadmap-container">
        <div className="roadmap-header">
          <h2 className="section-title gradient-text">–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞ —Ä–∞–∑–≤–∏—Ç–∏—è</h2>
          <p className="section-subtitle">
            –ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã HAQQ Network
          </p>
        </div>

        <div className="roadmap-timeline">
          {roadmapData.map((phase, index) => (
            <div 
              key={index} 
              className={`roadmap-item ${phase.status}`}
              data-index={index}
            >
              <div className="timeline-connector">
                <div className="connector-line"></div>
                <div 
                  className="timeline-marker"
                  style={{ backgroundColor: getStatusColor(phase.status) }}
                >
                  <span>{getStatusIcon(phase.status)}</span>
                </div>
              </div>

              <div className="roadmap-content">
                <div className="roadmap-header-content">
                  <div className="quarter-badge">{phase.quarter}</div>
                  <h3 className="phase-title">{phase.title}</h3>
                  <div 
                    className="status-indicator"
                    style={{ color: getStatusColor(phase.status) }}
                  >
                    {phase.status === 'completed' && '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'}
                    {phase.status === 'in-progress' && '–í –ø—Ä–æ—Ü–µ—Å—Å–µ'}
                    {phase.status === 'planned' && '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ'}
                  </div>
                </div>

                <ul className="roadmap-items">
                  {phase.items.map((item, itemIndex) => (
                    <li key={itemIndex} className="roadmap-item-detail">
                      <span className="item-icon">‚ñ∂</span>
                      <span className="item-text">{item}</span>
                    </li>
                  ))}
                </ul>

                <div className="roadmap-glow"></div>
              </div>
            </div>
          ))}
        </div>

        <div className="roadmap-cta">
          <div className="cta-content">
            <h3>–ì–æ—Ç–æ–≤—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Ä–µ–≤–æ–ª—é—Ü–∏–∏?</h3>
            <p>–°—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é –ø–µ—Ä–≤–æ–π —à–∞—Ä–∏–∞—Ç-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–π –±–ª–æ–∫—á–µ–π–Ω-—ç–∫–æ—Å–∏—Å—Ç–µ–º—ã</p>
            <button className="cta-button glow">
              <span>–ù–∞—á–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</span>
              <div className="button-sparkle"></div>
            </button>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Roadmap;
